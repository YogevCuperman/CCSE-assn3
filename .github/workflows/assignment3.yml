name: Build, Test, and Query
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Creating log file
        run: |
          echo "$(date -Iminutes)" > log.txt
          echo "Yogev Cuperman" >> log.txt


      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_COURSE_USERNAME }}
      #     password: ${{ secrets.DOCKER_COURSE_PASSWORD }}
      # - name: Set DATE
      #   run: echo "DATE=$(date -I)" >> $GITHUB_ENV
      # - name: Build the Docker image
      #   run: |
      #     docker build . --file ./BooksService/Dockerfile --tag ${{ secrets.DOCKER_COURSE_USERNAME }}/booksvr-v2
      #     docker tag ${{ secrets.DOCKER_COURSE_USERNAME }}/booksvr-v2 ${{ secrets.DOCKER_COURSE_USERNAME }}/booksvr-v2:${{ env.DATE }}
      # - name: Push to Docker Hub
      #   run: |
      #     docker push ${{ secrets.DOCKER_COURSE_USERNAME }}/booksvr-v2
      #     docker push ${{ secrets.DOCKER_COURSE_USERNAME }}/booksvr-v2:${{ env.DATE }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./BooksService/Dockerfile
          tags: books-service:latest, ${{ secrets.DOCKER_COURSE_USERNAME }}/books-service:latest
          outputs: type=docker, dest=/tmp/books_image.tar

      - name: Uploading image artifact
        uses: actions/upload-artifact@v4
        with:
          name: books-service-image
          path: /tmp/books_image.tar

      - name: Log build success
        run: echo "image successfully built" >> log.txt
        if: success()

      - name: Log build failure
        run: echo "image not able to be built" >> log.txt
        if: failure()

      - name: Uploading log artifact
        uses: actions/upload-artifact@v4
        with:
          name: workflow-log
          path: log.txt

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Downloading log artifact
        uses: actions/download-artifact@v4
        with:
          name: workflow-log
          path: ./

      - name: Downloading Books Service image artifact
        uses: actions/download-artifact@v4
        with:
          name: books-service-image
          path: ./

      - name: Load Books Service image
        run: docker load --input books_image.tar

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Building with Docker Compose
        run: docker-compose up -d
        continue-on-error: true

      - name: Check build status
        id: build_status
        run: echo "BUILD_STATUS=$?" >> $GITHUB_ENV

      - name: Handling failure build
        if: env.BUILD_STATUS != '0'
        run: exit 1

      - name: Handling successful build
        if: success()
        run: echo "Container up and running" >> log.txt

      - name: Set up Python
        uses: actions/setup-python@v5

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install requests
      
      - name: Run tests
        run: pytest -v tests/assn3_tests.py > assn3_test_results.txt
      
      - name: Log test results
        run: |
          if grep -q "failed" assn3_test_results.txt; then
            echo "tests failed" >> log.txt
          else
            echo "tests succeeded" >> log.txt
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: assn3_test_results.txt

      - name: Uploading log artifact
        uses: actions/upload-artifact@v4
        with:
          name: workflow-log
          path: log.txt
          overwrite: true
    
  query:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Downloading Books Service image artifact
        uses: actions/download-artifact@v4
        with:
          name: books-service-image
          path: ./

      - name: Load Books Service image
        run: docker load --input books_image.tar

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Building with Docker Compose
        run: docker-compose up --build -d

      - name: Checking that the containers are up
        run: docker ps

      - name: Checking that the server is up
        run: curl --location --request GET 'http://127.0.0.1:5001/'